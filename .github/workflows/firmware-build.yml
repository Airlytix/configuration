name: Build and Publish ESPHome firmware

on: workflow_dispatch

jobs:
  list-configs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4.1.1
      - id: set-matrix
        run: |
          echo "matrix=$(ls *.yaml | jq -R -s -c 'split("\n")[:-1]')"
          echo "matrix=$(ls *.yaml | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  build:
    name: Build ESPHome binary for ${{ matrix.config_file }}
    needs: [list-configs]
    strategy:
        matrix:
            config_file: ${{ fromJson(needs.list-manifests.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4.1.1
      - name: esphome build
        id: esphome-build
        uses: esphome/build-action@v1.8.0
        with:
          yaml_file:  ${{ matrix.config_file }}
          version: "2023.11.6"
      - run: |
          mkdir output
          filename=$(basename -- "$fullfile")
          filename="${filename%.*}"
          mv "${{ steps.esphome-build.outputs.name }}" output/$(filename)
      - uses: actions/upload-artifact@v3.1.2
        with:
          name: esphome-firmware
          path: output

  publish:
    name: Publish new firmware to GitHub Pages
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: actions/download-artifact@v3.0.2
        with:
          path: output
          name: esphome-firmware

      - name: Create manifest files
        run: |
          jq -s '{"name": "${{ inputs.name }}", "version": "${{ needs.build.outputs.esphome-version }}", "home_assistant_domain": "esphome", "new_install_skip_erase": false, "builds":.}' output/*/manifest.json > output/${{ inputs.manifest_filename }}

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          branch: gh-pages
          folder: output
          clean: true
